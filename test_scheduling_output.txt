Advanced Shell - Scheduling Test Suite with Configurable Time Slices
==================================================================

Testing Constraints:
1. Time slice is configurable and user-specified
2. Processes complete early if possible (removed from queue)
3. Process execution simulated with time.sleep()

=== Testing Round-Robin Scheduling with Configurable Time Slice ===

--- Testing with time slice: 0.5 seconds ---
Scheduler set to round_robin
Time slice: 0.5 seconds
Added process 1 (Priority: 5, Time needed: 0.3s)
Scheduler started
Added process 2 (Priority: 5, Time needed: 1.5s)
Added process 3 (Priority: 5, Time needed: 0.2s)
Added process 4 (Priority: 5, Time needed: 0.4s)
Jobs added with time slice 0.5s:
  Process 1: 'touch test/rr_ts0.5_file1.txt' (0.3s) - Should complete in one slice
  Process 2: 'echo job content' (1.5s) - Should need multiple slices
  Process 3: 'mkdir directory' (0.2s) - Should complete in one slice
  Process 4: 'ls command' (0.4s) - Should complete in one slice
Expected behavior: Jobs complete early if possible, others get multiple time slices
Starting scheduler...
Running process 1 for 0.3s (Round-Robin)
  Command: touch test/rr_ts0.5_file1.txt
  Simulating execution time: 0.30s
  Command executed successfully in 0.32s
Process 1 completed (Total time: 0.3s)
Running process 2 for 0.5s (Round-Robin)
  Command: echo 'Job 2 with time slice 0.5' > test/rr_ts0.5_file2.txt
  Simulating execution time: 0.50s
  Command executed successfully in 0.51s
Running process 3 for 0.2s (Round-Robin)
  Command: mkdir test/rr_ts0.5_dir
  Simulating execution time: 0.20s
  Command failed: mkdir: test/rr_ts0.5_dir: File exists

Process 3 completed (Total time: 0.2s)
Running process 4 for 0.4s (Round-Robin)
  Command: ls -la test/rr_ts0.5_*
  Simulating execution time: 0.40s
  Command executed successfully in 0.41s
  Output: -rw-r--r--  1 stevens34  staff   0 Aug  2 09:28 test/rr_ts0.5_file1.txt
-rw-r--r--  1 stevens34  staff  26 Aug  2 09:28 test/rr_ts0.5_file2.txt

test/rr_ts0.5_dir:
total 0
drwxr-xr-x   2 stevens34  staff   64 Aug  2 09:25 .
drwxr-xr-x  20 stevens34  staff  640 Aug  2 09:25 ..
Process 4 completed (Total time: 0.4s)
Running process 2 for 0.5s (Round-Robin)
  Command: echo 'Job 2 with time slice 0.5' > test/rr_ts0.5_file2.txt
  Simulating execution time: 0.50s
  Command executed successfully in 0.52s
Running process 2 for 0.5s (Round-Robin)
  Command: echo 'Job 2 with time slice 0.5' > test/rr_ts0.5_file2.txt
  Simulating execution time: 0.47s
  Command executed successfully in 0.48s
Process 2 completed (Total time: 1.5s)
Round-Robin test with 0.5s time slice completed
Checking created files:
  ✓ test/rr_ts0.5_file1.txt created
  ✓ test/rr_ts0.5_file2.txt created
    Content: 'Job 2 with time slice 0.5'
  ✓ test/rr_ts0.5_dir created

--- Testing with time slice: 1.0 seconds ---
Scheduler set to round_robin
Time slice: 1.0 seconds
Added process 1 (Priority: 5, Time needed: 0.3s)
Scheduler started
Added process 2 (Priority: 5, Time needed: 1.5s)
Added process 3 (Priority: 5, Time needed: 0.2s)
Added process 4 (Priority: 5, Time needed: 0.4s)
Jobs added with time slice 1.0s:
  Process 1: 'touch test/rr_ts1.0_file1.txt' (0.3s) - Should complete in one slice
  Process 2: 'echo job content' (1.5s) - Should need multiple slices
  Process 3: 'mkdir directory' (0.2s) - Should complete in one slice
  Process 4: 'ls command' (0.4s) - Should complete in one slice
Expected behavior: Jobs complete early if possible, others get multiple time slices
Starting scheduler...
Running process 1 for 0.3s (Round-Robin)
  Command: touch test/rr_ts1.0_file1.txt
  Simulating execution time: 0.30s
  Command executed successfully in 0.31s
Process 1 completed (Total time: 0.3s)
Running process 2 for 1.0s (Round-Robin)
  Command: echo 'Job 2 with time slice 1.0' > test/rr_ts1.0_file2.txt
  Simulating execution time: 1.00s
  Command executed successfully in 1.03s
Running process 3 for 0.2s (Round-Robin)
  Command: mkdir test/rr_ts1.0_dir
  Simulating execution time: 0.20s
  Command failed: mkdir: test/rr_ts1.0_dir: File exists

Process 3 completed (Total time: 0.2s)
Running process 4 for 0.4s (Round-Robin)
  Command: ls -la test/rr_ts1.0_*
  Simulating execution time: 0.40s
  Command executed successfully in 0.42s
  Output: -rw-r--r--  1 stevens34  staff   0 Aug  2 09:28 test/rr_ts1.0_file1.txt
-rw-r--r--  1 stevens34  staff  26 Aug  2 09:28 test/rr_ts1.0_file2.txt

test/rr_ts1.0_dir:
total 0
drwxr-xr-x   2 stevens34  staff   64 Aug  2 09:25 .
drwxr-xr-x  20 stevens34  staff  640 Aug  2 09:25 ..
Process 4 completed (Total time: 0.4s)
Running process 2 for 0.5s (Round-Robin)
  Command: echo 'Job 2 with time slice 1.0' > test/rr_ts1.0_file2.txt
  Simulating execution time: 0.47s
  Command executed successfully in 0.49s
Process 2 completed (Total time: 1.5s)
Round-Robin test with 1.0s time slice completed
Checking created files:
  ✓ test/rr_ts1.0_file1.txt created
  ✓ test/rr_ts1.0_file2.txt created
    Content: 'Job 2 with time slice 1.0'
  ✓ test/rr_ts1.0_dir created

--- Testing with time slice: 2.0 seconds ---
Scheduler set to round_robin
Time slice: 2.0 seconds
Added process 1 (Priority: 5, Time needed: 0.3s)
Scheduler started
Added process 2 (Priority: 5, Time needed: 1.5s)
Added process 3 (Priority: 5, Time needed: 0.2s)
Added process 4 (Priority: 5, Time needed: 0.4s)
Jobs added with time slice 2.0s:
  Process 1: 'touch test/rr_ts2.0_file1.txt' (0.3s) - Should complete in one slice
  Process 2: 'echo job content' (1.5s) - Should need multiple slices
  Process 3: 'mkdir directory' (0.2s) - Should complete in one slice
  Process 4: 'ls command' (0.4s) - Should complete in one slice
Expected behavior: Jobs complete early if possible, others get multiple time slices
Starting scheduler...
Running process 1 for 0.3s (Round-Robin)
  Command: touch test/rr_ts2.0_file1.txt
  Simulating execution time: 0.30s
  Command executed successfully in 0.32s
Process 1 completed (Total time: 0.3s)
Running process 2 for 1.5s (Round-Robin)
  Command: echo 'Job 2 with time slice 2.0' > test/rr_ts2.0_file2.txt
  Simulating execution time: 1.50s
  Command executed successfully in 1.51s
Process 2 completed (Total time: 1.5s)
Running process 3 for 0.2s (Round-Robin)
  Command: mkdir test/rr_ts2.0_dir
  Simulating execution time: 0.20s
  Command failed: mkdir: test/rr_ts2.0_dir: File exists

Process 3 completed (Total time: 0.2s)
Running process 4 for 0.4s (Round-Robin)
  Command: ls -la test/rr_ts2.0_*
  Simulating execution time: 0.40s
  Command executed successfully in 0.43s
  Output: -rw-r--r--  1 stevens34  staff   0 Aug  2 09:28 test/rr_ts2.0_file1.txt
-rw-r--r--  1 stevens34  staff  26 Aug  2 09:28 test/rr_ts2.0_file2.txt

test/rr_ts2.0_dir:
total 0
drwxr-xr-x   2 stevens34  staff   64 Aug  2 09:25 .
drwxr-xr-x  20 stevens34  staff  640 Aug  2 09:25 ..
Process 4 completed (Total time: 0.4s)
Round-Robin test with 2.0s time slice completed
Checking created files:
  ✓ test/rr_ts2.0_file1.txt created
  ✓ test/rr_ts2.0_file2.txt created
    Content: 'Job 2 with time slice 2.0'
  ✓ test/rr_ts2.0_dir created

=== Testing Priority-Based Scheduling with Time Simulation ===
Scheduler set to priority
Added process 1 (Priority: 1, Time needed: 0.3s)
Scheduler started
Added process 2 (Priority: 5, Time needed: 0.2s)
Added process 3 (Priority: 10, Time needed: 1.0s)
Added process 4 (Priority: 1, Time needed: 0.5s)
Jobs added to Priority scheduler:
  Process 1: 'echo high priority quick' (Priority 1, 0.3s) - Should run first
  Process 2: 'mkdir directory' (Priority 5, 0.2s) - Should run after high priority
  Process 3: 'echo low priority long' (Priority 10, 1.0s) - Should run last
  Process 4: 'touch file' (Priority 1, 0.5s) - Should run after first high priority
Expected behavior: Jobs run in priority order (1, 1, 5, 10) with time simulation
Starting scheduler...
Running process 1 (Priority: 1)
  Command: echo 'High priority - quick job' > test/priority_high_quick.txt
  Simulating execution time: 0.30s
  Command executed successfully in 0.32s
Process 1 completed (Total time: 0.3s)
Running process 4 (Priority: 1)
  Command: touch test/priority_high_medium.txt
  Simulating execution time: 0.50s
  Command executed successfully in 0.52s
Process 4 completed (Total time: 0.5s)
Running process 2 (Priority: 5)
  Command: mkdir test/priority_medium_dir
  Simulating execution time: 0.20s
  Command failed: mkdir: test/priority_medium_dir: File exists

Process 2 completed (Total time: 0.2s)
Running process 3 (Priority: 10)
  Command: echo 'Low priority - longer job' > test/priority_low_long.txt
  Simulating execution time: 1.00s
  Command executed successfully in 1.01s
Process 3 completed (Total time: 1.0s)
Priority test completed
Checking created files:
  ✓ test/priority_high_quick.txt created
    Content: 'High priority - quick job'
  ✓ test/priority_medium_dir created
  ✓ test/priority_low_long.txt created
    Content: 'Low priority - longer job'
  ✓ test/priority_high_medium.txt created

=== Testing Priority Preemption with Time Simulation ===
Scheduler set to priority
Added process 1 (Priority: 10, Time needed: 2.0s)
Scheduler started
Added low priority job:
  Process 1: 'echo low priority job' (Priority 10, 2.0s) - Should be preempted
Starting scheduler...
Running process 1 (Priority: 10)
  Command: echo 'Low priority job running' > test/preempt_low_priority.txt
  Simulating execution time: 2.00s
  Command executed successfully in 2.02s
Process 1 completed (Total time: 2.0s)
Added process 2 (Priority: 1, Time needed: 0.5s)
Added high priority job after 0.5s:
  Process 2: 'echo high priority job' (Priority 1, 0.5s) - Should preempt low priority
Expected behavior: High priority job should preempt low priority job immediately
Running process 2 (Priority: 1)
  Command: echo 'High priority job preempting' > test/preempt_high_priority.txt
  Simulating execution time: 0.50s
  Command executed successfully in 0.52s
Process 2 completed (Total time: 0.5s)
Preemption test completed
Checking created files:
  ✓ test/preempt_high_priority.txt created
    Content: 'High priority job preempting'
  ✓ test/preempt_low_priority.txt created
    Content: 'Low priority job running'

=== Testing Early Completion Behavior ===
Scheduler set to round_robin
Time slice: 1.0 seconds
Added process 1 (Priority: 5, Time needed: 0.2s)
Scheduler started
Added process 2 (Priority: 5, Time needed: 0.8s)
Added process 3 (Priority: 5, Time needed: 0.1s)
Jobs added to test early completion:
  Process 1: 'touch file1' (0.2s) - Should complete early, next process starts immediately
  Process 2: 'echo content' (0.8s) - Should use most of time slice
  Process 3: 'touch file3' (0.1s) - Should complete very early
Expected behavior: Quick jobs complete early, scheduler moves to next job immediately
Starting scheduler...
Running process 1 for 0.2s (Round-Robin)
  Command: touch test/early_complete_1.txt
  Simulating execution time: 0.20s
  Command executed successfully in 0.22s
Process 1 completed (Total time: 0.2s)
Running process 2 for 0.8s (Round-Robin)
  Command: echo 'Medium job' > test/early_complete_2.txt
  Simulating execution time: 0.80s
  Command executed successfully in 0.82s
Process 2 completed (Total time: 0.8s)
Running process 3 for 0.1s (Round-Robin)
  Command: touch test/early_complete_3.txt
  Simulating execution time: 0.10s
  Command executed successfully in 0.12s
Process 3 completed (Total time: 0.1s)
Early completion test completed
Checking created files:
  ✓ test/early_complete_1.txt created
  ✓ test/early_complete_2.txt created
    Content: 'Medium job'
  ✓ test/early_complete_3.txt created

All tests completed successfully!
The scheduling algorithms are working correctly with configurable time slices.
All test files and directories have been created in the 'test/' directory.

Key Features Demonstrated:
- Configurable time slices (0.5s, 1.0s, 2.0s)
- Early completion when processes finish before time slice
- Time simulation using actual command execution
- Priority-based preemption with time simulation
